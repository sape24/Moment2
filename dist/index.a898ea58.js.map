{"mappings":"ACGA,IAAI,EAAa,SAAS,cAAc,CAAC,aACrC,EAAc,SAAS,cAAc,CAAC,cAO1C,SAAS,IACL,IAAI,EAAe,SAAS,cAAc,CAAC,aAGxC,AAAkB,CAAA,SAAlB,AAFS,OAAO,gBAAgB,CAAC,GAE3B,OAAO,CACZ,EAAa,KAAK,CAAC,OAAO,CAAG,QAE7B,EAAa,KAAK,CAAC,OAAO,CAAG,MAErC,CAZA,EAAW,gBAAgB,CAAC,QAAS,GACrC,EAAY,gBAAgB,CAAC,QAAS,GAatC,OAAO,MAAM,CAKb,WACI,GACJ,EALA,IAAI,EAAO,EAAE,CACT,EAAe,EAAE,CAMrB,eAAe,IACX,GAAI,CACA,IAAM,EAAW,MAAM,MAAM,4DAE7B,GAAI,CAAC,EAAS,EAAE,CAChB,MAAM,AAAI,MAAM,iDAGpB,EAAO,MAAM,EAAS,IAAI,GAC1B,EAAc,EACd,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,uBAAwB,EAAM,OAAO,CACvD,CACJ,CAEA,SAAS,EAAc,CAAI,EACvB,IAAM,EAAY,SAAS,cAAc,CAAC,WAC1C,CAAA,EAAU,SAAS,CAAG,GACtB,EAAK,OAAO,CAAC,AAAA,IACT,IAAI,EAAS,SAAS,aAAa,CAAC,MAEhC,EAAgB,SAAS,aAAa,CAAC,KAC3C,CAAA,EAAc,WAAW,CAAG,EAAO,IAAI,CACvC,EAAO,WAAW,CAAC,GAEnB,IAAI,EAAgB,SAAS,aAAa,CAAC,KAC3C,CAAA,EAAc,WAAW,CAAG,EAAO,UAAU,CAC7C,EAAO,WAAW,CAAC,GAEnB,IAAI,EAAuB,SAAS,aAAa,CAAC,KAClD,CAAA,EAAqB,WAAW,CAAG,EAAO,WAAW,CACrD,EAAO,WAAW,CAAC,GAEnB,EAAU,WAAW,CAAC,EAC1B,EACJ,CAEA,IAAI,EAAc,SAAS,cAAc,CAAC,cACtC,EAAc,SAAS,cAAc,CAAC,cACtC,EAAc,SAAS,cAAc,CAAC,eAO1C,SAAS,EAAU,CAAM,EACrB,EAAK,IAAI,CAAC,CAAC,EAAG,IAAM,CAAC,CAAC,EAAO,CAAC,aAAa,CAAC,CAAC,CAAC,EAAO,GACrD,EAAc,EAClB,CARA,EAAY,gBAAgB,CAAC,QAAS,IAAM,EAAU,SACtD,EAAY,gBAAgB,CAAC,QAAS,IAAM,EAAU,eACtD,EAAY,gBAAgB,CAAC,QAAS,IAAM,EAAU,gBAQtD,IAAI,EAAa,SAAS,cAAc,CAAC,eAEzC,EAAW,gBAAgB,CAAC,QAE5B,WACI,IAAI,EAAY,EAAW,KAAK,CAAC,iBAAiB,GAOlD,EALe,EAAK,MAAM,CAAC,AAAA,GACvB,EAAO,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,IACzC,EAAO,UAAU,CAAC,iBAAiB,GAAG,QAAQ,CAAC,IAC/C,EAAO,WAAW,CAAC,iBAAiB,GAAG,QAAQ,CAAC,IAGxD","sources":["<anon>","src/javascript/main.js"],"sourcesContent":["var $647be9e9e843caef$exports = {};\n\"use strict\";\n//skapar variablar av knapp elementen i html\nlet $647be9e9e843caef$var$openButton = document.getElementById(\"open-menu\");\nlet $647be9e9e843caef$var$closeButton = document.getElementById(\"close-menu\");\n//skapar en eventlistener som lyssnar efter när användare klickar på dessa element\n$647be9e9e843caef$var$openButton.addEventListener('click', $647be9e9e843caef$var$toggleMenu);\n$647be9e9e843caef$var$closeButton.addEventListener('click', $647be9e9e843caef$var$toggleMenu);\n//function som kollar ifall mobilmenyn visas eller inte när man trycker på respektive knapp, om den inte visas så visas den och vice versa. Den ändrar knappens css ifall display är none till block annars ändras den till none\nfunction $647be9e9e843caef$var$toggleMenu() {\n    let mobileMenuEl = document.getElementById(\"mobilemenu\");\n    let style = window.getComputedStyle(mobileMenuEl);\n    if (style.display === \"none\") mobileMenuEl.style.display = \"block\";\n    else mobileMenuEl.style.display = \"none\";\n}\nwindow.onload = $647be9e9e843caef$var$init; // init funktionen anropas när sidan har laddats in\nlet $647be9e9e843caef$var$data = []; //globala variabler av datan från json och en global variabel av den filtrerade versionen av datan\nlet $647be9e9e843caef$var$filteredData = [];\nfunction $647be9e9e843caef$var$init() {\n    $647be9e9e843caef$var$getCourseData();\n}\nasync function $647be9e9e843caef$var$getCourseData() {\n    try {\n        const response = await fetch('https://webbutveckling.miun.se/files/ramschema_ht24.json');\n        if (!response.ok) throw new Error(\"N\\xe4tverksproblem - felaktigt svar fr\\xe5n servern\");\n        $647be9e9e843caef$var$data = await response.json();\n        $647be9e9e843caef$var$displayCourse($647be9e9e843caef$var$data); //anropar funktion med resultatet från JSON-datan\n    } catch (error) {\n        console.error('Det uppstod ett fel:', error.message);\n    }\n}\nfunction $647be9e9e843caef$var$displayCourse(data) {\n    const coursesEl = document.getElementById(`appendEl`);\n    coursesEl.innerHTML = ``;\n    data.forEach((course)=>{\n        let newRow = document.createElement(`tr`);\n        let newCourseCode = document.createElement(`td`);\n        newCourseCode.textContent = course.code;\n        newRow.appendChild(newCourseCode);\n        let newCourseName = document.createElement(`td`);\n        newCourseName.textContent = course.coursename;\n        newRow.appendChild(newCourseName);\n        let newCourseProgression = document.createElement(`td`);\n        newCourseProgression.textContent = course.progression;\n        newRow.appendChild(newCourseProgression);\n        coursesEl.appendChild(newRow) //slutligen så appendas raden in i tbody\n        ;\n    });\n}\nlet $647be9e9e843caef$var$sortButton1 = document.getElementById(`coursecode`) //Skapar en variabel av tabellrubrikerena (th)\n;\nlet $647be9e9e843caef$var$sortButton2 = document.getElementById(`coursename`);\nlet $647be9e9e843caef$var$sortButton3 = document.getElementById(`progression`);\n$647be9e9e843caef$var$sortButton1.addEventListener('click', ()=>$647be9e9e843caef$var$sortTable(`code`)) //Skapar en eventlistener som lyssnar efter ett click på elementet, arrowfunction som anropar funktionen sortable med code, coursaname respektive progression som argument \n;\n$647be9e9e843caef$var$sortButton2.addEventListener('click', ()=>$647be9e9e843caef$var$sortTable(`coursename`));\n$647be9e9e843caef$var$sortButton3.addEventListener('click', ()=>$647be9e9e843caef$var$sortTable(`progression`));\nfunction $647be9e9e843caef$var$sortTable(column) {\n    $647be9e9e843caef$var$data.sort((a, b)=>a[column].localeCompare(b[column]));\n    $647be9e9e843caef$var$displayCourse($647be9e9e843caef$var$data);\n}\nlet $647be9e9e843caef$var$filterText = document.getElementById(`filtertable`) //skapar en variabel av sökrutan\n;\n$647be9e9e843caef$var$filterText.addEventListener('keyup', $647be9e9e843caef$var$filterTable) //eventlistener som lyssnar efter när användaren släpper en tangent anropar en function när den triggas\n;\nfunction $647be9e9e843caef$var$filterTable() {\n    let inputText = $647be9e9e843caef$var$filterText.value.toLocaleLowerCase() //variabel av vad användaren har skrivit in, tolocalelowercase så stor eller liten bokstav inte spelar roll\n    ;\n    $647be9e9e843caef$var$filteredData = $647be9e9e843caef$var$data.filter((course)=>course.code.toLocaleLowerCase().includes(inputText) || //lowercase av samma anledning som tidigare, .includes för att se om texten i sökrutan finns någonstans i datan, or operator så att om kurskod,kursnamn eller progression matchar så följer den med till den filtrerade versionen av datan\n        course.coursename.toLocaleLowerCase().includes(inputText) || course.progression.toLocaleLowerCase().includes(inputText));\n    $647be9e9e843caef$var$displayCourse($647be9e9e843caef$var$filteredData) //uppdaterar tabellen med den filtrerade versionen\n    ;\n}\n\n\n//# sourceMappingURL=index.a898ea58.js.map\n","\"use strict\"\r\n\r\n//skapar variablar av knapp elementen i html\r\nlet openButton = document.getElementById(\"open-menu\")\r\nlet closeButton = document.getElementById(\"close-menu\")\r\n\r\n\r\n//skapar en eventlistener som lyssnar efter när användare klickar på dessa element\r\nopenButton.addEventListener('click', toggleMenu)\r\ncloseButton.addEventListener('click', toggleMenu)\r\n//function som kollar ifall mobilmenyn visas eller inte när man trycker på respektive knapp, om den inte visas så visas den och vice versa. Den ändrar knappens css ifall display är none till block annars ändras den till none\r\nfunction toggleMenu(){\r\n    let mobileMenuEl = document.getElementById(\"mobilemenu\")\r\n    let style = window.getComputedStyle(mobileMenuEl)\r\n\r\n    if(style.display === \"none\") {\r\n        mobileMenuEl.style.display = \"block\";\r\n    } else{\r\n        mobileMenuEl.style.display = \"none\"\r\n    }\r\n}\r\n\r\nwindow.onload = init;            // init funktionen anropas när sidan har laddats in\r\n\r\nlet data = [];                  //globala variabler av datan från json och en global variabel av den filtrerade versionen av datan\r\nlet filteredData = []\r\n\r\nfunction init() {                 //funktion som anropar en annan funktion\r\n    getCourseData()\r\n}\r\n\r\nasync function getCourseData() {               //anropar JSON-data med hjälp av FetchAPI detta tillsammans async/wait och try/catch lägger resultatet i data variabeln\r\n    try {\r\n        const response = await fetch('https://webbutveckling.miun.se/files/ramschema_ht24.json');\r\n\r\n        if (!response.ok) {\r\n        throw new Error('Nätverksproblem - felaktigt svar från servern');\r\n    }\r\n\r\n    data = await response.json();\r\n    displayCourse(data);            //anropar funktion med resultatet från JSON-datan\r\n    } catch (error) {\r\n        console.error('Det uppstod ett fel:', error.message);\r\n    }\r\n}\r\n\r\nfunction displayCourse(data) {                                   //funktion som tar emot datan och loopar igenom den för att skapa element i detta fall tabellrader med datans innehåll, för varje ny rad/kurs så appendas de nya cellerna med kursnamn, kurskod och progression in i raden\r\n    const coursesEl = document.getElementById(`appendEl`)\r\n    coursesEl.innerHTML = ``\r\n    data.forEach(course => {\r\n        let newRow = document.createElement(`tr`)\r\n        \r\n        let newCourseCode = document.createElement(`td`)             \r\n        newCourseCode.textContent = course.code\r\n        newRow.appendChild(newCourseCode)\r\n\r\n        let newCourseName = document.createElement(`td`)\r\n        newCourseName.textContent = course.coursename\r\n        newRow.appendChild(newCourseName)\r\n\r\n        let newCourseProgression = document.createElement(`td`)\r\n        newCourseProgression.textContent = course.progression\r\n        newRow.appendChild(newCourseProgression)\r\n\r\n        coursesEl.appendChild(newRow)                           //slutligen så appendas raden in i tbody\r\n    });\r\n}\r\n\r\nlet sortButton1 = document.getElementById(`coursecode`)                     //Skapar en variabel av tabellrubrikerena (th)\r\nlet sortButton2 = document.getElementById(`coursename`)\r\nlet sortButton3 = document.getElementById(`progression`)\r\n\r\nsortButton1.addEventListener('click', () => sortTable(`code`))             //Skapar en eventlistener som lyssnar efter ett click på elementet, arrowfunction som anropar funktionen sortable med code, coursaname respektive progression som argument \r\nsortButton2.addEventListener('click', () => sortTable(`coursename`))\r\nsortButton3.addEventListener('click', () => sortTable(`progression`))\r\n\r\n\r\nfunction sortTable(column) {                                                //function för att sortera tabellen alfabetiskt, den tar emot argument på vad den ska sortera men självaste sorteringen är med hjälp av en comparefunction som tar två värden och jämför alfabetiskt med .localecompare\r\n    data.sort((a, b) => a[column].localeCompare(b[column]));\r\n    displayCourse(data);\r\n}\r\n\r\nlet filterText = document.getElementById(`filtertable`)                      //skapar en variabel av sökrutan\r\n\r\nfilterText.addEventListener('keyup', filterTable)                           //eventlistener som lyssnar efter när användaren släpper en tangent anropar en function när den triggas\r\n \r\nfunction filterTable() {                                                   //function för att filtrera tabellen\r\n    let inputText = filterText.value.toLocaleLowerCase()                   //variabel av vad användaren har skrivit in, tolocalelowercase så stor eller liten bokstav inte spelar roll\r\n\r\n    filteredData = data.filter(course =>                                     //filtrerar data och sparar den filtrerade versionen i den globala variabeln filtereddata\r\n        course.code.toLocaleLowerCase().includes(inputText) ||                      //lowercase av samma anledning som tidigare, .includes för att se om texten i sökrutan finns någonstans i datan, or operator så att om kurskod,kursnamn eller progression matchar så följer den med till den filtrerade versionen av datan\r\n        course.coursename.toLocaleLowerCase().includes(inputText) ||\r\n        course.progression.toLocaleLowerCase().includes(inputText)\r\n    )\r\n    displayCourse(filteredData)                                             //uppdaterar tabellen med den filtrerade versionen\r\n}"],"names":["$647be9e9e843caef$var$openButton","document","getElementById","$647be9e9e843caef$var$closeButton","$647be9e9e843caef$var$toggleMenu","mobileMenuEl","style","window","getComputedStyle","display","addEventListener","onload","$647be9e9e843caef$var$getCourseData","$647be9e9e843caef$var$data","$647be9e9e843caef$var$filteredData","response","fetch","ok","Error","json","$647be9e9e843caef$var$displayCourse","error","console","message","data","coursesEl","innerHTML","forEach","course","newRow","createElement","newCourseCode","textContent","code","appendChild","newCourseName","coursename","newCourseProgression","progression","$647be9e9e843caef$var$sortButton1","$647be9e9e843caef$var$sortButton2","$647be9e9e843caef$var$sortButton3","$647be9e9e843caef$var$sortTable","column","sort","a","b","localeCompare","$647be9e9e843caef$var$filterText","inputText","value","toLocaleLowerCase","filter","includes"],"version":3,"file":"index.a898ea58.js.map"}